import type { NextPage } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";
import axios from "axios";
import router from "next/router";
import styled from "styled-components";
import { Button, CenterContainer, HeadText, SendButton, SendButtonDis, SmButton, TextArea } from "../components";
import { route } from "next/dist/server/router";

const Home: NextPage = () => {
  const [frontText, setFrontText] = useState("전송 대기중");
  const [btnState, setBtnState] = useState(false);
  const [textData, setTextData] = useState("");
  const [isLoaded, setIsLoaded] = useState(false);

  useEffect(() => {
    getUser();
  }, []);

  useEffect(() => {
    
  }, [frontText]);

  const getUser = async () => {
    const result = await axios.get('http://localhost/auth', {
      withCredentials: true
    }).catch((err) => {
      router.push('/login');
    });

    if (result) {
      if (result.status === 200) {
        setIsLoaded(true);
      }
    }
  }

  const getTime = async () => {
    let today = new Date();
    const curTime = today.getHours();
    if (curTime <= 18) {
      today = new Date(today.setDate(today.getDate() - 1));
    }
    const year = today.getFullYear();
    const month = ("0" + (today.getMonth() + 1)).slice(-2);
    const day = ("0" + today.getDate()).slice(-2);
    let todayDate = year + "-" + month + "-" + day;
    return todayDate;
  };

  const csvToJson = async (csv_string:string) => {
    setFrontText('전송중 입니다.');

    setBtnState(true);

    const rows = csv_string.split("\n");

    const header = rows[0].split(",");

    const headers = header[0].split("\t"); 
    
    console.log(headers[0] + headers[10]);
    
    
    if (headers[0] !== '날짜' || headers[12] !== '수거 할당') {
      setFrontText(`데이터좀 똑바로 넣으시지!!  날짜부터 수거할당이라고~`);

      return;
    }

    const jsonArr = toArr(rows);

    return jsonArr;
  }


  const toArr = (rows: Array<any>): Array<Object> =>  {
    let jsonArr = [];

    for (let i = 1; i < rows.length; i++) {
      let obj: {
        [name: string]: string;
      } = {};

      const headers = ["date", "service", "customer", "item", "region", "building", "lotadrs", "roadadrs", "detailadrs", "password", "feature", "district", "assignee"];

      const row = rows[i].split(",");      
      
      const value = row[0].split('\t');
      
      // 모든 value 값 toString 
      for (let j = 0; j < headers.length; j++) {
        obj[headers[j]] = value[j].toString();
      }

      jsonArr.push(obj);
    }

    return jsonArr;
  }

  const jsonFileSend = async (jsonFile:any) => {
    const todayDate = await getTime();

    for (let i = 0; i < jsonFile.length; i++) {
      try {
        await axios.post('http://localhost/collection/assign', {
          ...jsonFile[i],
        });

      } catch (e) {
        console.error(e);
        
        setFrontText(`${i+1}번째 데이터에서 에러 발생!`);
      }
    }
    
    setBtnState(false);
    setFrontText("전송 완료");
  }


  const addData = async (e: any) => {
    e.preventDefault;
    e.stopPropagation;

    const jsonFile = await csvToJson(textData);

    if (jsonFile === undefined) {
      setBtnState(false);
            
      return ;
    }

    await jsonFileSend(jsonFile);

  };

  const logout = async () => {
    const result = await axios.get('http://localhost/auth/logout', {
      withCredentials: true
    }).catch((e) => {
      console.log(e);
    })

    if (result) {
      if (result.status === 200) {
        router.push('/login'); 
      }
    }    
  }

  return (
    <CenterContainer>
      <Head>
        <title>오늘수거 데이터 보내기 v3</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
        {
        !isLoaded ? <div>
        </div> :
          <>
            <SmButton onClick={logout}>로그아웃</SmButton>
            <HeadText>오늘수거 데이터 보내기 v3</HeadText>
              <TextArea
                onChange={(e) => {
                  setTextData(e.target.value);
                }}
              />
              <CenterContainer>
                {btnState === true ?
                  <SendButtonDis >데이터 전송</SendButtonDis>:
                <SendButton onClick={addData} >데이터 전송</SendButton>}
              <div style={{ textAlign: "center", color: "blue", margin: "15px" }}>
                {frontText}
              </div>
            </CenterContainer>
          </>
        }
      </CenterContainer>
    
  );
};

export default Home;
